version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: devsync_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-devsync}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mysecretpassword}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devsync_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-devsync}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Node.js Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: devsync_app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-mysecretpassword}@db:5432/${POSTGRES_DB:-devsync}
      PORT: ${APP_PORT:-3000}
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - devsync_network
    depends_on:
      db:
        condition: service_healthy
    command: pnpm run dev

  # pgAdmin (Database management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: devsync_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@devsync.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - devsync_network
    depends_on:
      - db

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  devsync_network:
    driver: bridge
